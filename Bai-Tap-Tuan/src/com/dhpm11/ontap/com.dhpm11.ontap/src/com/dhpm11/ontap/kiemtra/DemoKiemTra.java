/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dhpm11.ontap.kiemtra;

import com.dhpm11.ontap.single.SinhVienTest;
import com.mysql.jdbc.Connection;
import java.awt.HeadlessException;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Suong
 */
public class DemoKiemTra extends javax.swing.JFrame {

    DefaultTableModel defaultTableModel = new DefaultTableModel();

    /**
     * Creates new form DemoKiemTra
     */
    public DemoKiemTra() {
        initComponents();
        showData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnMain = new javax.swing.JPanel();
        pnTren = new javax.swing.JPanel();
        lblDanhSachSinhVien = new javax.swing.JLabel();
        pnDuoi = new javax.swing.JPanel();
        jScrollPaneThongTin = new javax.swing.JScrollPane();
        tblThongTin = new javax.swing.JTable();
        pnGiua = new javax.swing.JPanel();
        lblMaSV = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        lblNamSinh = new javax.swing.JLabel();
        txtNamSinh = new javax.swing.JTextField();
        lblHoTen = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        btnKLuu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Demo Kiểm Tra");

        pnMain.setLayout(new java.awt.BorderLayout());

        lblDanhSachSinhVien.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblDanhSachSinhVien.setText("DANH SÁCH SINH VIÊN");

        javax.swing.GroupLayout pnTrenLayout = new javax.swing.GroupLayout(pnTren);
        pnTren.setLayout(pnTrenLayout);
        pnTrenLayout.setHorizontalGroup(
            pnTrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTrenLayout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(lblDanhSachSinhVien)
                .addContainerGap(134, Short.MAX_VALUE))
        );
        pnTrenLayout.setVerticalGroup(
            pnTrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTrenLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblDanhSachSinhVien)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pnMain.add(pnTren, java.awt.BorderLayout.PAGE_START);

        tblThongTin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SV", "Họ và tên", "Năm sinh"
            }
        ));
        tblThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTinMouseClicked(evt);
            }
        });
        jScrollPaneThongTin.setViewportView(tblThongTin);

        javax.swing.GroupLayout pnDuoiLayout = new javax.swing.GroupLayout(pnDuoi);
        pnDuoi.setLayout(pnDuoiLayout);
        pnDuoiLayout.setHorizontalGroup(
            pnDuoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDuoiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnDuoiLayout.setVerticalGroup(
            pnDuoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDuoiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPaneThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnMain.add(pnDuoi, java.awt.BorderLayout.PAGE_END);

        lblMaSV.setText("Mã SV:");

        txtMaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSVActionPerformed(evt);
            }
        });

        lblNamSinh.setText("Năm sinh:");

        txtNamSinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamSinhActionPerformed(evt);
            }
        });

        lblHoTen.setText("Họ tên:");

        txtHoTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoTenActionPerformed(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.setEnabled(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.setEnabled(false);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnLuu.setText("Lưu");
        btnLuu.setEnabled(false);
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        btnKLuu.setText("K.Lưu");
        btnKLuu.setEnabled(false);
        btnKLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKLuuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnGiuaLayout = new javax.swing.GroupLayout(pnGiua);
        pnGiua.setLayout(pnGiuaLayout);
        pnGiuaLayout.setHorizontalGroup(
            pnGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGiuaLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnGiuaLayout.createSequentialGroup()
                        .addGroup(pnGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaSV)
                            .addComponent(lblHoTen))
                        .addGap(30, 30, 30)
                        .addGroup(pnGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnGiuaLayout.createSequentialGroup()
                                .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(lblNamSinh)
                                .addGap(33, 33, 33)
                                .addComponent(txtNamSinh))
                            .addComponent(txtHoTen)))
                    .addGroup(pnGiuaLayout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnKLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        pnGiuaLayout.setVerticalGroup(
            pnGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGiuaLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaSV)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNamSinh)
                    .addComponent(txtNamSinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHoTen)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnSua)
                    .addComponent(btnLuu)
                    .addComponent(btnThoat)
                    .addComponent(btnKLuu))
                .addContainerGap())
        );

        pnMain.add(pnGiua, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnKLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKLuuActionPerformed
        removeToDefault();
        btnKLuu.setEnabled(false);
        btnLuu.setEnabled(false);
    }//GEN-LAST:event_btnKLuuActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        int ret = JOptionPane.showConfirmDialog(null, "Muốn Thoát hả?", "Thoát", JOptionPane.YES_NO_OPTION);
        if (ret == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
//        if (kiemTraTonTai(txtMaSV.getText().trim()) {
        int ret = JOptionPane.showConfirmDialog(null, "Muốn Sửa hả?", "Sửa", JOptionPane.YES_NO_OPTION);
        if (ret == JOptionPane.YES_OPTION) {
            Connection conn = null;
            String url = "jdbc:mysql://localhost:3306/dbtest?useUnicode=true&characterEncoding=UTF-8";
            String user = "root";
            String pass = "";
            String sql = "UPDATE `ds_sinhvien` SET `ho_ten`=?,`nam_sinh`=? WHERE `ma_sv`=?";
            PreparedStatement pstmt;

            try {
                conn = (Connection) DriverManager.getConnection(url, user, pass);
                pstmt = conn.prepareStatement(sql);

                pstmt.setString(1, txtHoTen.getText().trim());

                pstmt.setInt(2, Integer.parseInt(txtNamSinh.getText().trim()));

                pstmt.setString(3, txtMaSV.getText().toString().trim());

                int rs = pstmt.executeUpdate();
                System.out.println(rs);

                JOptionPane.showMessageDialog(null, "Sửa thành công!");
            } catch (HeadlessException | NumberFormatException | SQLException e) {
                System.out.println("Lỗi Update - MaSV nhập chuỗi!");
            }
            showData();
        }
//        } else {
//            JOptionPane.showMessageDialog(null, "Mã không tồn tại");
//        }
        btnLuu.setEnabled(false);
        btnKLuu.setEnabled(false);
        btnXoa.setEnabled(false);
        btnSua.setEnabled(false);
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblThongTinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTinMouseClicked
        int selectRow = tblThongTin.getSelectedRow();
        // LAY DU LIEU TRONG TABLE
        TableModel model = tblThongTin.getModel();

        txtMaSV.setText(model.getValueAt(selectRow, 0).toString());

        txtHoTen.setText(model.getValueAt(selectRow, 1).toString());

        txtNamSinh.setText(model.getValueAt(selectRow, 2).toString());

//        btnThem.setEnabled(false);
        btnSua.setEnabled(true);
        btnXoa.setEnabled(true);
        btnLuu.setEnabled(false);
        btnKLuu.setEnabled(false);
    }//GEN-LAST:event_tblThongTinMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
//        removeToDefault();
        btnLuu.setEnabled(true);
        btnKLuu.setEnabled(true);
        btnXoa.setEnabled(false);
        btnSua.setEnabled(false);
        txtMaSV.setEditable(true);
        txtNamSinh.setEditable(true);
        txtHoTen.setEditable(true);
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
//        if (kiemTraTonTai(txtMaSV.getText().trim())) {
        int ret = JOptionPane.showConfirmDialog(null, "Muốn xóa hả?", "Xóa", JOptionPane.YES_NO_OPTION);
        if (ret == JOptionPane.YES_OPTION) {
            try {
                Connection conn = null;
                String url = "jdbc:mysql://localhost:3306/dbtest?useUnicode=true&characterEncoding=UTF-8";
                String user = "root";
                String pass = "";
                PreparedStatement pstmt;
                conn = (Connection) DriverManager.getConnection(url, user, pass);

                String maSV = txtMaSV.getText().trim();
                String sql = "DELETE FROM `ds_sinhvien` WHERE ma_sv = ?";
                pstmt = conn.prepareStatement(sql);
                pstmt.setString(1, maSV);
                int rs = pstmt.executeUpdate();
                System.out.println(rs);
                JOptionPane.showMessageDialog(null, "Xóa thành công");
                showData();
                removeToDefault();
            } catch (SQLException | NumberFormatException ex) {
                System.out.println("Lỗi Delete , maSV nhập sai định dạng");
            }
        }
//        } else {
//            JOptionPane.showMessageDialog(null, "Mã Không tồn tại!");
//        }
        btnLuu.setEnabled(false);
        btnKLuu.setEnabled(false);
        btnXoa.setEnabled(false);
        btnSua.setEnabled(false);
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        if (!txtMaSV.getText().trim().equals("")) {
            if (kiemTraTonTai(txtMaSV.getText().trim()) == false) {
                int ret = JOptionPane.showConfirmDialog(null, "Muốn Lưu hả?", "Thêm", JOptionPane.YES_NO_OPTION);
                if (ret == JOptionPane.YES_OPTION) {
                    Connection conn = null;
                    String url = "jdbc:mysql://localhost:3306/dbtest?useUnicode=true&characterEncoding=UTF-8";
                    String user = "root";
                    String pass = "";
                    String sql = "INSERT INTO `ds_sinhvien`(`ma_sv`, `ho_ten`, `nam_sinh`) VALUES (?,?,?)";
                    PreparedStatement pstmt;

                    try {
                        conn = (Connection) DriverManager.getConnection(url, user, pass);
                        pstmt = conn.prepareStatement(sql);
                        pstmt.setString(1, txtMaSV.getText().trim());

                        pstmt.setString(2, txtHoTen.getText().trim());

                        pstmt.setInt(3, Integer.parseInt(txtNamSinh.getText().trim()));

                        int rs = pstmt.executeUpdate();
                        System.out.println("Inserted " + rs);

                        JOptionPane.showMessageDialog(null, "Lưu thành công!");
                    } catch (HeadlessException | NumberFormatException | SQLException e) {
                        System.out.println("Lỗi Insert - MaSV nhập chuỗi!");
                        JOptionPane.showMessageDialog(null, "Mã đã tồn tại");
                    }
                    showData();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Mã đã tồn tại");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Mã không được để trống");
        }
        btnKLuu.setEnabled(false);
        btnLuu.setEnabled(false);
    }//GEN-LAST:event_btnLuuActionPerformed

    private void txtMaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSVActionPerformed
        txtNamSinh.requestFocus();
        txtNamSinh.selectAll();
//        testBtn();
    }//GEN-LAST:event_txtMaSVActionPerformed

    private void txtNamSinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamSinhActionPerformed
        txtHoTen.requestFocus();
        txtHoTen.selectAll();
//        testBtn();
    }//GEN-LAST:event_txtNamSinhActionPerformed

    private void txtHoTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoTenActionPerformed
        btnKLuu.requestFocus();
        testBtn();
    }//GEN-LAST:event_txtHoTenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DemoKiemTra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DemoKiemTra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DemoKiemTra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DemoKiemTra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DemoKiemTra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKLuu;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JScrollPane jScrollPaneThongTin;
    private javax.swing.JLabel lblDanhSachSinhVien;
    private javax.swing.JLabel lblHoTen;
    private javax.swing.JLabel lblMaSV;
    private javax.swing.JLabel lblNamSinh;
    private javax.swing.JPanel pnDuoi;
    private javax.swing.JPanel pnGiua;
    private javax.swing.JPanel pnMain;
    private javax.swing.JPanel pnTren;
    private javax.swing.JTable tblThongTin;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtNamSinh;
    // End of variables declaration//GEN-END:variables

    private void showData() {
        tblThongTin.setDefaultEditor(Object.class, null);
        defaultTableModel.setRowCount(0);
        List<SinhVienKT> listAll = getAll();
        defaultTableModel = (DefaultTableModel) tblThongTin.getModel();
        Object[] row = new Object[8];
        for (int i = 0; i < listAll.size(); i++) {
            row[0] = listAll.get(i).getMaSV();
            row[1] = listAll.get(i).getHoTen();
            row[2] = listAll.get(i).getNamSinh();
            defaultTableModel.addRow(row);
        }
    }

    private List<SinhVienKT> getAll() {
        List<SinhVienKT> listAll = new ArrayList<SinhVienKT>();

        Connection conn = null;
        String url = "jdbc:mysql://localhost:3306/dbtest?useUnicode=true&characterEncoding=UTF-8";
        String user = "root";
        String pass = "";
        String sql = "SELECT * FROM `ds_sinhvien` WHERE 1";
        ResultSet rs;
        Statement stmt;

        try {
            conn = (Connection) DriverManager.getConnection(url, user, pass);
            stmt = conn.createStatement();
            rs = stmt.executeQuery(sql);

            SinhVienKT result = null;
            while (rs.next()) {
                result = new SinhVienKT();
                result.setMaSV(rs.getString("ma_sv"));
                result.setHoTen(rs.getString("ho_ten"));
                result.setNamSinh(rs.getInt("nam_sinh"));
                listAll.add(result);
            }
            conn.close();
            rs.close();
            stmt.close();

        } catch (SQLException ex) {
            System.out.println("Lỗi getAll()");
        }

        return listAll;
    }

    private boolean kiemTraTonTai(String ma) {
        Connection conn = null;
        String url = "jdbc:mysql://localhost:3306/dbtest?useUnicode=true&characterEncoding=UTF-8";
        String user = "root";
        String pass = "";
        try {
            conn = (Connection) DriverManager.getConnection(url, user, pass);
            String sql = "SELECT `ma_sv` FROM `sinhvien` WHERE ma_sv = " + ma;
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String name = rs.getString("ma_sv");
                System.out.println(name);
                return true;
            }
            conn.close();
            rs.close();
            stmt.close();
        } catch (SQLException ex) {
            System.out.println("Lỗi kiemTraTonTai()");
        }

        return false;
    }

    private void removeToDefault() {
        txtMaSV.setText("");
        txtHoTen.setText("");
        txtNamSinh.setText("");
        txtMaSV.requestFocus();
        tblThongTin.getSelectionModel().clearSelection();
    }

    private void testBtn() {
        btnKLuu.setEnabled(false);
        if (!txtMaSV.getText().trim().equals("")
                && !txtHoTen.getText().trim().equals("")
                && !txtNamSinh.getText().trim().equals("")) {
            btnKLuu.setEnabled(true);
            btnLuu.setEnabled(true);
        } else {
            btnKLuu.setEnabled(false);
            btnLuu.setEnabled(false);
        }
    }
}
