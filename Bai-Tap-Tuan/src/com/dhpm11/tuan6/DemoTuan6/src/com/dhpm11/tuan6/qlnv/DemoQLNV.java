/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dhpm11.tuan6.qlnv;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import com.mysql.jdbc.Connection;
import java.awt.event.KeyEvent;
import java.sql.DriverManager;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Suong
 */
public class DemoQLNV extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int i, int i1) {
            return false;
        }
    };

    /**
     * Creates new form DemoStudentManagerment
     */
    public DemoQLNV() {
        initComponents();
        showEmployee();
    }

    private List<Employee> getAllEmployee() {
        List<Employee> listAllE = new ArrayList<Employee>();

        Connection conn = null;
        String url = "jdbc:mysql://localhost:3306/dbemployee?useUnicode=true&characterEncoding=UTF-8";
        String user = "root";
        String pass = "";
        String sql = "select * from employee";
        ResultSet reEmployee;
        Statement stmt;

        try {
            conn = (Connection) DriverManager.getConnection(url, user, pass);
            stmt = conn.createStatement();
            reEmployee = stmt.executeQuery(sql);

            Employee employee = null;
            while (reEmployee.next()) {
                employee = new Employee();
                employee.setId(reEmployee.getInt("id"));
                employee.setName(reEmployee.getString("name"));
                employee.setAddress(reEmployee.getString("address"));
                employee.setGender(reEmployee.getString("gender"));
                employee.setKnowdge(reEmployee.getString("knowlege"));
                employee.setSubject(reEmployee.getString("subject"));
                listAllE.add(employee);
            }
            conn.close();
            reEmployee.close();
            stmt.close();

        } catch (SQLException ex) {
            Logger.getLogger(DemoQLNV.class.getName()).log(Level.SEVERE, null, ex);
        }

        return listAllE;
    }

    private void showEmployee() {
//        tblListEmployee.setModel(model);
        tblListEmployee.setDefaultEditor(Object.class, null);
        model.setRowCount(0);
        List<Employee> listAllE = getAllEmployee();
        model = (DefaultTableModel) tblListEmployee.getModel();
        Object[] row = new Object[6];
        for (int i = 0; i < listAllE.size(); i++) {
            row[0] = listAllE.get(i).getId();
            row[1] = listAllE.get(i).getName();
            row[2] = listAllE.get(i).getAddress();
            row[3] = listAllE.get(i).getGender();
            row[4] = listAllE.get(i).getKnowdge();
            row[5] = listAllE.get(i).getSubject();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jpnRoot = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        rdMale = new javax.swing.JRadioButton();
        rdFemale = new javax.swing.JRadioButton();
        lblKnowledge = new javax.swing.JLabel();
        chkJava = new javax.swing.JCheckBox();
        chkPython = new javax.swing.JCheckBox();
        lblSubject = new javax.swing.JLabel();
        cboSubject = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListEmployee = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Demo QLNV");
        setResizable(false);

        lblName.setText("Name");

        lblAddress.setText("Address");

        lblGender.setText("Gender");

        buttonGroup1.add(rdMale);
        rdMale.setText("Male");

        buttonGroup1.add(rdFemale);
        rdFemale.setText("Female");

        lblKnowledge.setText("Knowledge");

        chkJava.setText("Java");

        chkPython.setText("Python");

        lblSubject.setText("Subject");

        cboSubject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Management", "Computer Sciences", "Education", "Bussiness" }));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        tblListEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Address", "Gender", "Knowledge", "Subject"
            }
        ));
        tblListEmployee.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblListEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListEmployeeMouseClicked(evt);
            }
        });
        tblListEmployee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblListEmployeeKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblListEmployee);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnRootLayout = new javax.swing.GroupLayout(jpnRoot);
        jpnRoot.setLayout(jpnRootLayout);
        jpnRootLayout.setHorizontalGroup(
            jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnRootLayout.createSequentialGroup()
                .addGroup(jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnRootLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName)
                            .addComponent(lblAddress)
                            .addComponent(lblKnowledge)
                            .addComponent(lblGender)
                            .addComponent(lblSubject))
                        .addGap(26, 26, 26)
                        .addGroup(jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtName)
                                .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                            .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jpnRootLayout.createSequentialGroup()
                                    .addComponent(chkJava)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chkPython))
                                .addGroup(jpnRootLayout.createSequentialGroup()
                                    .addComponent(rdMale)
                                    .addGap(45, 45, 45)
                                    .addComponent(rdFemale)))))
                    .addGroup(jpnRootLayout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnReset)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jpnRootLayout.setVerticalGroup(
            jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnRootLayout.createSequentialGroup()
                .addGroup(jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnRootLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender)
                            .addComponent(rdMale)
                            .addComponent(rdFemale))
                        .addGap(15, 15, 15)
                        .addGroup(jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblKnowledge)
                            .addComponent(chkJava)
                            .addComponent(chkPython))
                        .addGap(15, 15, 15)
                        .addGroup(jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSubject)
                            .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jpnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnReset)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete)))
                    .addGroup(jpnRootLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        int ret = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn Save không?", "Save", JOptionPane.YES_NO_OPTION);
        if (ret == JOptionPane.YES_OPTION) {
            Connection conn = null;

            String url, user, password, sql = "", strName = "", strAddress = "", strGender = "", strKnowledge = "", strSubject = "";
            int row = 0;

            strName = txtName.getText();
            strAddress = txtAddress.getText();
            strSubject = cboSubject.getSelectedItem().toString();

            if (rdMale.isSelected()) {
                strGender = "Male";
            } else {
                strGender = rdFemale.getText();
            }

            if (chkJava.isSelected()) {
                strKnowledge = strKnowledge + chkJava.getText() + " ";
            }
            if (chkPython.isSelected()) {
                strKnowledge = strKnowledge + chkPython.getText();
            }

            PreparedStatement preStmt;

            try {
                sql = "INSERT INTO `employee` (`id`, `name`, `address`, `gender`, `knowlege`, `subject`) VALUES (null,?, ?, ?, ?, ?)";
                Class.forName("com.mysql.jdbc.Driver");
                conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbemployee?useUnicode=true&characterEncoding=UTF-8", "root", "");
//            conn = (Connection) DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=DBemployee;integratedSecurity=true;", "sa", "suong123");
                System.out.println("kết nối r");
                preStmt = conn.prepareStatement(sql);
                preStmt.setString(1, strName);
                preStmt.setString(2, strAddress);
                preStmt.setString(3, strGender);
                preStmt.setString(4, strKnowledge);
                preStmt.setString(5, strSubject);
                row = preStmt.executeUpdate();
                System.out.print("Số dong inserted: " + row);

                preStmt.close();
                conn.close();
                
                //
                model.setRowCount(0);
                JOptionPane.showMessageDialog(null, "Inserted Successfully");
                showEmployee();
            } catch (Exception e) {
                System.out.println(e);
            }
            showEmployee();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        showEmployee();
        txtName.setText("");
        txtAddress.setText("");
        rdMale.setSelected(true);
        chkJava.setSelected(false);
        chkPython.setSelected(false);
        cboSubject.setSelectedIndex(0);
    }//GEN-LAST:event_btnResetActionPerformed

    private void tblListEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListEmployeeMouseClicked
        // TODO add your handling code here:
        // LAY INDEX (CHI SO DONG) CUA TABLE
        int selectRow = tblListEmployee.getSelectedRow();
//        displayDetails(selectRow);
        // LAY DU LIEU TRONG TABLE
        TableModel model = tblListEmployee.getModel();
        txtName.setText(model.getValueAt(selectRow, 1).toString());
        txtAddress.setText(model.getValueAt(selectRow, 2).toString());
        String gender = model.getValueAt(selectRow, 3).toString();
        if (gender.equals("Male")) {
            rdMale.setSelected(true);
        } else {
            rdFemale.setSelected(true);
        }

        String knowledge = model.getValueAt(selectRow, 4).toString();
        switch (knowledge) {
            case "Java ":
                chkJava.setSelected(true);
                chkPython.setSelected(false);
                break;
            case "Python":
                chkJava.setSelected(false);
                chkPython.setSelected(true);
                break;
            case "Java Python":
                chkJava.setSelected(true);
                chkPython.setSelected(true);
                break;
            default:
                chkJava.setSelected(false);
                chkPython.setSelected(false);
                break;
        }

        String subject = model.getValueAt(selectRow, 5).toString().trim();
        switch (subject) {
            case "Management":
                cboSubject.setSelectedIndex(0);
                break;
            case "Computer Sciences":
                cboSubject.setSelectedIndex(1);
                break;
            case "Education":
                cboSubject.setSelectedIndex(2);
                break;
            case "Bussiness":
                cboSubject.setSelectedIndex(3);
                break;
        }
    }//GEN-LAST:event_tblListEmployeeMouseClicked

    private void tblListEmployeeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblListEmployeeKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            int selectRow = tblListEmployee.getSelectedRow();
            displayDetails(selectRow);
        }
    }//GEN-LAST:event_tblListEmployeeKeyReleased

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int ret = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn Update không?", "Update", JOptionPane.YES_NO_OPTION);
        if (ret == JOptionPane.YES_OPTION) {
            Connection conn = null;

            String url, user, password, sql = "", strName = "", strAddress = "", strGender = "", strKnowledge = "", strSubject = "";
            int row = 0;
            int rowIndex = tblListEmployee.getSelectedRow();
            // ID CUA NHAN VIEN MA TA CLICK VAO TABLE
            String id = tblListEmployee.getModel().getValueAt(rowIndex, 0).toString();

            strName = txtName.getText();
            strAddress = txtAddress.getText();
            strSubject = cboSubject.getSelectedItem().toString();

            if (rdMale.isSelected()) {
                strGender = "Male";
            } else {
                strGender = rdFemale.getText();
            }

            if (chkJava.isSelected()) {
                strKnowledge = strKnowledge + chkJava.getText() + " ";
            }
            if (chkPython.isSelected()) {
                strKnowledge = strKnowledge + chkPython.getText();
            }

            PreparedStatement preStmt;

            try {
                sql = "UPDATE `employee` SET `name`=?,`address`=?,`gender`=?,`knowlege`=?,`subject`=? WHERE `id`=" + id;
                Class.forName("com.mysql.jdbc.Driver");
                conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbemployee?useUnicode=true&characterEncoding=UTF-8", "root", "");
//            conn = (Connection) DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=DBemployee;integratedSecurity=true;", "sa", "suong123");
                System.out.println("kết nối r");
                preStmt = conn.prepareStatement(sql);
                preStmt.setString(1, strName);
                preStmt.setString(2, strAddress);
                preStmt.setString(3, strGender);
                preStmt.setString(4, strKnowledge);
                preStmt.setString(5, strSubject);
                row = preStmt.executeUpdate();
                DefaultTableModel model = (DefaultTableModel) tblListEmployee.getModel();
                model.setRowCount(0);
                //  LAM MOI DU LIEU TABLE
                showEmployee();
                JOptionPane.showMessageDialog(null, "Updated Sucessfully!");
                System.out.print("Số dong updated: " + row);

                conn.close();
                preStmt.close();
                
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int ret = JOptionPane.showConfirmDialog(null, "Are you sure to Delete?", "Delete", JOptionPane.YES_NO_OPTION);
        if (ret == 0) {
            Connection conn = null;

            String url, user, password, sql = "", strName = "", strAddress = "", strGender = "", strKnowledge = "", strSubject = "";
            int row = 0;
            int rowIndex = tblListEmployee.getSelectedRow();
            // ID CUA NHAN VIEN MA TA CLICK VAO TABLE
            String id = tblListEmployee.getModel().getValueAt(rowIndex, 0).toString();

            strName = txtName.getText();
            strAddress = txtAddress.getText();
            strSubject = cboSubject.getSelectedItem().toString();

            if (rdMale.isSelected()) {
                strGender = "Male";
            } else {
                strGender = rdFemale.getText();
            }

            if (chkJava.isSelected()) {
                strKnowledge = strKnowledge + chkJava.getText() + " ";
            }
            if (chkPython.isSelected()) {
                strKnowledge = strKnowledge + chkPython.getText();
            }

            PreparedStatement preStmt;

            try {
                sql = "DELETE FROM `employee` WHERE id = "+id;
                Class.forName("com.mysql.jdbc.Driver");
                conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbemployee?useUnicode=true&characterEncoding=UTF-8", "root", "");
//            conn = (Connection) DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=DBemployee;integratedSecurity=true;", "sa", "suong123");
                System.out.println("kết nối r");
                preStmt = conn.prepareStatement(sql);
                row = preStmt.executeUpdate();
                DefaultTableModel model = (DefaultTableModel) tblListEmployee.getModel();
                model.setRowCount(0);
                //  LAM MOI DU LIEU TABLE
                showEmployee();
                JOptionPane.showMessageDialog(null, "Deleted Sucessfully!");
                System.out.print("Số dong deleted: " + row);

                conn.close();
                preStmt.close();
                
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DemoQLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DemoQLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DemoQLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DemoQLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DemoQLNV().setVisible(true);
            }
        });
    }

    private void displayDetails(int selectRow) {
        txtName.setText((String) model.getValueAt(selectRow, 0));
        txtAddress.setText((String) model.getValueAt(selectRow, 1));
        if (model.getValueAt(selectRow, 2).equals("Male")) {
            rdMale.setSelected(true);
        } else {
            rdFemale.setSelected(true);
        }
        if (model.getValueAt(selectRow, 3).equals(" Java Python")) {
            chkJava.setSelected(true);
            chkPython.setSelected(true);
        } else if (model.getValueAt(selectRow, 3).equals(" Java")) {
            chkJava.setSelected(true);
            chkPython.setSelected(false);
        } else if (model.getValueAt(selectRow, 3).equals(" Python")) {
            chkPython.setSelected(true);
            chkJava.setSelected(false);
        } else {
            chkPython.setSelected(false);
            chkJava.setSelected(false);
        }

        if (model.getValueAt(selectRow, 4).equals("Management")) {
            cboSubject.setSelectedIndex(0);
        } else if (model.getValueAt(selectRow, 4).equals("Computer Sciences")) {
            cboSubject.setSelectedIndex(1);
        } else if (model.getValueAt(selectRow, 4).equals("Education")) {
            cboSubject.setSelectedIndex(2);
        } else if (model.getValueAt(selectRow, 4).equals("Bussiness")) {
            cboSubject.setSelectedIndex(3);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboSubject;
    private javax.swing.JCheckBox chkJava;
    private javax.swing.JCheckBox chkPython;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpnRoot;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblKnowledge;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JRadioButton rdFemale;
    private javax.swing.JRadioButton rdMale;
    private javax.swing.JTable tblListEmployee;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
